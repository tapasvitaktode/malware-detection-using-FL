import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sb

import sklearn.model_selection as md
from sklearn.metrics import accuracy_score

from sklearn.neighbors import KNeighborsClassifier

from sklearn.ensemble import RandomForestClassifier

from sklearn.linear_model import LogisticRegression

import random

import warnings

def federated_learning_visualizer(devices):

    # Analyzer for metric progress overtime for edge devices in federated learning

    print('Generating chart, dont stop the program...')

    rows = []

    for device in devices:

        dicts = device.metrics_per_iteration
        for dictionary in dicts:
            dictionary['device_id'] = device.id

        rows.extend(dicts)

    federated_df = pd.DataFrame.from_dict(rows)

    sb.lineplot(x="iteration",
                y="accuracy",
                data=federated_df, label='Accuracy')

    sb.lineplot(x="iteration",
                y="recall",
                data=federated_df, label='Recall')

    sb.lineplot(x="iteration",
                y="precision",
                data=federated_df, label='Precision')

    plt.title('Metrics of edge devices models over iterations')

    random_img_number = random.randint(0, 150230)
    filename = "Federated_Analysis"+str(random_img_number)+'.png'

    plt.savefig('./charts/'+filename)

    print('Chart generation finished!')
    print('You can see the generated chart after stopping the simulation with the name '+filename)